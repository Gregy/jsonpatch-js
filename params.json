{"tagline":"A JavaScript implementation of the JSON Media Type for partial modifications","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"## JSON Patch for JavaScript\r\n\r\nLibrary to apply JSON Patches in JavaScript\r\nhttp://tools.ietf.org/html/draft-ietf-appsawg-json-patch-03\r\n\r\nFor convenience, ``jsonpatch.apply`` can take a patch as an object\r\nor an array of objects. The spec states the latter as being the official\r\npatch syntax.\r\n\r\n**Note: all operations are applied in-place.**\r\n\r\n### Add\r\n\r\nPatch syntax: ``{add: <path>, value: <value>}``\r\n\r\n```javascript\r\n// Add property, result: {foo: 'bar'}\r\njsonpatch.apply({}, [{add: '/foo', value: 'bar'}]);\r\n\r\n// Add array element, result: {foo: [1, 2, 3]}\r\njsonpatch.apply({foo: [1, 3]}, [{add: '/foo/1', value: 2}]);\r\n\r\n// Complex, result: {foo: [{bar: 'baz'}]}\r\njsonpatch.apply({foo: [{}]}, [{add: '/foo/0/bar', value: 'baz'}]);\r\n```\r\n\r\n### Remove\r\n\r\nPatch syntax: ``{remove: <path>}``\r\n\r\n```javascript\r\n// Remove property, result: {}\r\njsonpatch.apply({foo: 'bar'}, [{remove: '/foo'}]);\r\n\r\n// Remove array element, result: {foo: [1, 3]}\r\njsonpatch.apply({foo: [1, 2, 3]}, [{remove: '/foo/1'}]);\r\n\r\n// Complex, result: {foo: [{}]}\r\njsonpatch.apply({foo: [{bar: 'baz'}]}, [{remove: '/foo/0/bar'}]);\r\n```\r\n\r\n### Replace\r\n\r\nPatch syntax: ``{replace: <path>, value: <value>}``\r\n\r\n```javascript\r\n// Replace property, result: {foo: 1}\r\njsonpatch.apply({foo: 'bar'}, [{replace: '/foo', value: 1}]);\r\n\r\n// Repalce array element, result: {foo: [1, 4, 3]}\r\njsonpatch.apply({foo: [1, 2, 3]}, [{replace: '/foo/1', value: 4}]);\r\n\r\n// Complex, result: {foo: [{bar: 1}]}\r\njsonpatch.apply({foo: [{bar: 'baz'}]}, [{replace: '/foo/0/bar', value: 1}]);\r\n```\r\n\r\n### Move\r\n\r\nPatch syntax: ``{move: <path>, to: <path>}``\r\n\r\n```javascript\r\n// Move property, result {bar: [1, 2, 3]}\r\njsonpatch.apply({foo: [1, 2, 3]}, [{move: '/foo', to: '/bar'}]);\r\n```\r\n\r\n### Test\r\n\r\nPatch syntax: ``{test: <path>, value: <value>}``\r\n\r\n```javascript\r\n// Test property, result: true\r\njsonpatch.apply({foo: 'bar'}, [{test: '/foo', value: 'bar'}]\r\n```","google":"","name":"jsonpatch-js"}